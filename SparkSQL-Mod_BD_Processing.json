{"paragraphs":[{"text":"//Spark SQL\nimport spark.implicits._\nimport org.apache.spark.sql.types._\n\n//case class RealEstate(MLS:String, Location:String, Price:String, Bedrooms:Int, Bathrooms:Int, Size:String, PriceSQFt:Float, Status: String)\n\n//creaciòn del esquema que se usarà para cuando se lea el archivo csv\nval esquema = new StructType()\n                    .add(\"MLS\", StringType, false)\n                    .add(\"Location\", StringType, false)\n                    .add(\"Price\", FloatType, false)\n                    .add(\"Bedrooms\", IntegerType, false)\n                    .add(\"Bathrooms\", IntegerType, false)\n                    .add(\"Size\", StringType, false)\n                    .add(\"PriceSQFt\", FloatType, false)\n                    .add(\"Status\", StringType, false)\n\n//Leemos el archivo a transformar\nval realEstate = spark.read.format(\"csv\").option(\"header\", \"true\").schema(esquema).load(\"file:////home/kc/mod-bd-processing/practica/datasets/RealEstate.csv\")\n//Creaciòn de una vista para posterior manipulaciòn con SQL\nval avgPrice = realEstate.createOrReplaceTempView(\"Price\")\n//Sentencia SQL para seleccionar las localidades y sus respectivos precios en euros\nval avg = spark.sql(\"select Location as Localidad, avg(PriceSQFt * 0.88)as PriceSQFtEuros from Price group by Location order by Location asc\")\n//Escritura de los resultados en formato json en el directorio real-estate\navg.write.mode(\"append\").json(\"file:////home/kc/mod-bd-processing/practica/datasets/real-estate/\")\navg.show","user":"anonymous","dateUpdated":"2019-03-12T18:15:29+0100","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+------------------+\n|          Localidad|    PriceSQFtEuros|\n+-------------------+------------------+\n|      Arroyo Grande| 318.0503369140625|\n|         Atascadero|251.46880322265625|\n|            Bradley| 533.3327978515625|\n|            Cambria| 432.9211311848958|\n|            Cayucos|338.89680053710936|\n|            Creston|            284.02|\n|       Grover Beach| 271.7264123535156|\n|             Lompoc|131.91199462890626|\n|           Los Osos|226.30813252766927|\n|          Morro Bay| 329.2409973144531|\n|             Nipomo|165.37253906249998|\n|             Oceano| 1007.283212890625|\n|        Out Of Area|276.73360107421877|\n|        Paso Robles|202.60298706054692|\n|        Pismo Beach| 314.1699012756348|\n|    San Luis Obispo|403.84373942057294|\n|         San Miguel|  233.956787109375|\n| Santa Maria-Orcutt|161.07249318049506|\n|            Solvang|170.10840362548828|\n|          Templeton|231.36080322265624|\n+-------------------+------------------+\nonly showing top 20 rows\n\nimport spark.implicits._\nimport org.apache.spark.sql.types._\nesquema: org.apache.spark.sql.types.StructType = StructType(StructField(MLS,StringType,false), StructField(Location,StringType,false), StructField(Price,FloatType,false), StructField(Bedrooms,IntegerType,false), StructField(Bathrooms,IntegerType,false), StructField(Size,StringType,false), StructField(PriceSQFt,FloatType,false), StructField(Status,StringType,false))\nrealEstate: org.apache.spark.sql.DataFrame = [MLS: string, Location: string ... 6 more fields]\navgPrice: Unit = ()\navg: org.apache.spark.sql.DataFrame = [Localidad: string, PriceSQFtEuros: double]\n"}]},"apps":[],"jobName":"paragraph_1551715822191_806801994","id":"20190304-171022_468301359","dateCreated":"2019-03-04T17:10:22+0100","dateStarted":"2019-03-07T01:03:41+0100","dateFinished":"2019-03-07T01:03:44+0100","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:726"},{"text":"/*//RDDs\n//Leemos archivo CSV\nval realEstate = sc.textFile(\"file:////home/kc/mod-bd-processing/practica/datasets/RealEstate.csv\")\n//Obtenemos los elementos del RDD, excepto el header\nval realEstateCleaned = lines.filter(line => !line.contains(\"Location\"))\n\n//Mapea location y precio del metro cuadrado\nval SQFtPricePairRdd = realEstateCleaned.map(line => (line.split(\",\")(1), (1, line.split(\",\")(6).toDouble)))\n//Suma las veces que se repita la location y el valor del precio del metro cuadrado\nval locationPriceTotal = SQFtPricePairRdd.reduceByKey((x, y) => (x._1 + y._1, x._2 + y._2))\n//Genera un pair rdd y el value resultante es la medio del precio del metro cuadrado. El resultado final en euros.\nval locationPriceAvgEuros = locationPriceTotal.mapValues(avgCount => avgCount._2 / avgCount._1 * 0.88) \n//Convierte RDD a DF\nval locationPriceAvgEurosDF= locationPriceAvgEuros.toDF() \n//Escribe en la ruta indicada el resultado en formato json\nlocationPriceAvgEurosDF.write.mode(\"append\").json(\"file:////home/kc/mod-bd-processing/practica/datasets/real-estate/\")*/","user":"anonymous","dateUpdated":"2019-03-12T18:11:38+0100","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"realEstate: org.apache.spark.rdd.RDD[String] = file:////home/kc/mod-bd-processing/practica/datasets/RealEstate.csv MapPartitionsRDD[346] at textFile at <console>:51\nrealEstateCleaned: org.apache.spark.rdd.RDD[String] = MapPartitionsRDD[347] at filter at <console>:52\nSQFtPricePairRdd: org.apache.spark.rdd.RDD[(String, (Int, Double))] = MapPartitionsRDD[348] at map at <console>:54\nlocationPriceTotal: org.apache.spark.rdd.RDD[(String, (Int, Double))] = ShuffledRDD[349] at reduceByKey at <console>:57\nlocationPriceAvgEuros: org.apache.spark.rdd.RDD[(String, Double)] = MapPartitionsRDD[350] at mapValues at <console>:59\nlocationPriceAvgEurosDF: org.apache.spark.sql.DataFrame = [_1: string, _2: double]\n"}]},"apps":[],"jobName":"paragraph_1551720338907_-1797297586","id":"20190304-182538_2139494039","dateCreated":"2019-03-04T18:25:38+0100","dateStarted":"2019-03-06T00:40:16+0100","dateFinished":"2019-03-06T00:40:17+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:727"},{"text":"\n    /*realEstate.groupBy(\"Location\")\n      .avg(\"PriceSQFt\")\n      .orderBy(\"avg(PriceSQFt)\")\n      .show()*/","user":"anonymous","dateUpdated":"2019-03-11T21:26:43+0100","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------------------+------------------+\n|           Location|    avg(PriceSQFt)|\n+-------------------+------------------+\n|         New Cuyama| 34.04999923706055|\n|        Bakersfield| 69.69000244140625|\n|          King City| 71.51333363850911|\n|         Greenfield| 91.58000183105469|\n|    Santa Margarita| 95.37999725341797|\n|            Soledad|102.69333394368489|\n|        Out Of Area|116.23333485921223|\n|          Guadalupe|120.17500114440918|\n|           Coalinga|124.34285736083984|\n| Santa Maria-Orcutt|147.58871702518104|\n|             Lompoc|149.89999389648438|\n|             Lompoc|  159.871154491718|\n|         San Miguel|163.16071374075753|\n|            Bradley|166.80999755859375|\n|            Creston|181.75999450683594|\n| Santa Maria-Orcutt|183.03692406874436|\n|             Nipomo|   187.92333984375|\n|        Paso Robles|191.17752878525678|\n|         Los Alamos| 191.9933319091797|\n|            Solvang|193.30500411987305|\n+-------------------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1551825115526_-1128374220","id":"20190305-233155_1174262495","dateCreated":"2019-03-05T23:31:55+0100","dateStarted":"2019-03-07T01:06:07+0100","dateFinished":"2019-03-07T01:06:09+0100","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:728"},{"user":"anonymous","config":{"colWidth":12,"fontSize":9,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1551917104313_-2073066618","id":"20190307-010504_2022071838","dateCreated":"2019-03-07T01:05:04+0100","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:729"}],"name":"SparkSQL-Mod_BD_Processing","id":"2E6WQE6V3","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}